name: Publish to PyPI

on:
  workflow_dispatch:
  push:
    tags:
     - '*'

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@master
    - name: Setup Python
      uses: actions/setup-python@v3
      with:
        python-version: '3.10'
    - name: Install packages
      run: |
        python -m pip install build twine
    - name: Check and update version
      id: version
      run: |
        python
        from os import environ
        from utils import version

        # get version from tag
        tag_version_full = environ["GITHUB_REF"]
        # extract version itself
        tag_version = tag_version_full.split("/")[-1]
        # get version from file
        file_version = version.get_version()

        if tag_version == "release":
          # if tag version ends with release, this was run from a button - redirect to testpypi
          with open(environ["GITHUB_OUTPUT"], "a") as f:
            print("target=testpypi", file=f)
        else:
          # anything else, this was run from a release - target pypi proper
          with open(environ["GITHUB_OUTPUT"], "a") as f:
            print("target=pypi", file=f)
          # make sure repo version matches
          version.set_version(tag_version, populate=True)
    - name: Build
      run: |
        python -m build mkdocs
    - name: Upload
      run: |
        twine upload mkdocs/dist/* --repository ${{steps.version.outputs.target}} -u __token__ -p ${{ secrets.PYPI_API_TOKEN }}
